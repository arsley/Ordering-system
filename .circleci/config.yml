version: 2
jobs:
  build_test:
    machine: true
    steps:
      - checkout

      - restore_cache:
          keys:
            - yarn-dep-{{ checksum "yarn.lock" }}
            - yarn-dep-

      - restore_cache:
          keys:
            - gem-dep-{{ checksum "Gemfile.lock" }}
            - gem-dep-

      - run:
          name: Install docker-compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: Build images
          command: |
            cp .env.sample .env
            docker-compose build

      - run:
          name: Setup test environment
          command: |
            cp .env.sample .env
            docker-compose run --rm web bundle install --path vendor/bundle -j4
            docker-compose run --rm -e RAILS_ENV=test web bundle exec rails db:create db:migrate db:seed

      - run:
          name: Create asset's manifest with dependency installation
          command: |
            cp .env.sample .env
            docker-compose run --rm web yarn
            docker-compose run --rm web yarn build

      - save_cache:
          paths:
            - node_modules
          key: yarn-dep-{{ checksum "yarn.lock" }}

      - save_cache:
          paths:
            - vendor/bundle
          key: gem-dep-{{ checksum "Gemfile.lock" }}

      - run:
          name: Run tests
          command: |
            cp .env.sample .env
            docker-compose run --rm -e RAILS_ENV=test web bundle exec rails spec

  # deploy:
  #   docker:
  #     - image: arsley/ansible:ubuntu18.04
  #   steps:
  #     - checkout
  #
  #     - run:
  #         name: Deploy application
  #         command: ansible-playbook -i ansible/inventory/hosts ansible/playbooks/deploy.yml

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build_test
      # - deploy:
      #     requires:
      #       - build_test
      #     filters:
      #       branches:
      #         only: master
